//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FeedbackSystemClient.FeedbackServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeedbackServiceReference.IFeedbackService")]
    public interface IFeedbackService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/AddFeedback", ReplyAction="http://tempuri.org/IFeedbackService/AddFeedbackResponse")]
        string AddFeedback(FeedbackSystemService.Feedback feedback);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/AddFeedback", ReplyAction="http://tempuri.org/IFeedbackService/AddFeedbackResponse")]
        System.Threading.Tasks.Task<string> AddFeedbackAsync(FeedbackSystemService.Feedback feedback);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/UpdateFeedback", ReplyAction="http://tempuri.org/IFeedbackService/UpdateFeedbackResponse")]
        string UpdateFeedback(FeedbackSystemService.Feedback feedback);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/UpdateFeedback", ReplyAction="http://tempuri.org/IFeedbackService/UpdateFeedbackResponse")]
        System.Threading.Tasks.Task<string> UpdateFeedbackAsync(FeedbackSystemService.Feedback feedback);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/DeleteFeedback", ReplyAction="http://tempuri.org/IFeedbackService/DeleteFeedbackResponse")]
        string DeleteFeedback(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/DeleteFeedback", ReplyAction="http://tempuri.org/IFeedbackService/DeleteFeedbackResponse")]
        System.Threading.Tasks.Task<string> DeleteFeedbackAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/GetFeedbacks", ReplyAction="http://tempuri.org/IFeedbackService/GetFeedbacksResponse")]
        System.Data.DataSet GetFeedbacks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/GetFeedbacks", ReplyAction="http://tempuri.org/IFeedbackService/GetFeedbacksResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetFeedbacksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/GetFeedback", ReplyAction="http://tempuri.org/IFeedbackService/GetFeedbackResponse")]
        FeedbackSystemService.Feedback GetFeedback(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/GetFeedback", ReplyAction="http://tempuri.org/IFeedbackService/GetFeedbackResponse")]
        System.Threading.Tasks.Task<FeedbackSystemService.Feedback> GetFeedbackAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFeedbackServiceChannel : FeedbackSystemClient.FeedbackServiceReference.IFeedbackService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeedbackServiceClient : System.ServiceModel.ClientBase<FeedbackSystemClient.FeedbackServiceReference.IFeedbackService>, FeedbackSystemClient.FeedbackServiceReference.IFeedbackService {
        
        public FeedbackServiceClient() {
        }
        
        public FeedbackServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FeedbackServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedbackServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedbackServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddFeedback(FeedbackSystemService.Feedback feedback) {
            return base.Channel.AddFeedback(feedback);
        }
        
        public System.Threading.Tasks.Task<string> AddFeedbackAsync(FeedbackSystemService.Feedback feedback) {
            return base.Channel.AddFeedbackAsync(feedback);
        }
        
        public string UpdateFeedback(FeedbackSystemService.Feedback feedback) {
            return base.Channel.UpdateFeedback(feedback);
        }
        
        public System.Threading.Tasks.Task<string> UpdateFeedbackAsync(FeedbackSystemService.Feedback feedback) {
            return base.Channel.UpdateFeedbackAsync(feedback);
        }
        
        public string DeleteFeedback(int Id) {
            return base.Channel.DeleteFeedback(Id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteFeedbackAsync(int Id) {
            return base.Channel.DeleteFeedbackAsync(Id);
        }
        
        public System.Data.DataSet GetFeedbacks() {
            return base.Channel.GetFeedbacks();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetFeedbacksAsync() {
            return base.Channel.GetFeedbacksAsync();
        }
        
        public FeedbackSystemService.Feedback GetFeedback(int Id) {
            return base.Channel.GetFeedback(Id);
        }
        
        public System.Threading.Tasks.Task<FeedbackSystemService.Feedback> GetFeedbackAsync(int Id) {
            return base.Channel.GetFeedbackAsync(Id);
        }
    }
}
